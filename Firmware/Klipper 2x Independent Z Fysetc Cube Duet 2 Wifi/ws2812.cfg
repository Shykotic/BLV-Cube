# Configure some macros for setting LEDs
# Left Neopixel PC11 Heater 6
# Middle PC8 Heater 5
# Right PC5 Heater 4

[neopixel led1] # Left
pin: PC11
chain_count: 16
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: GRB

[neopixel led2] # Middle
pin: PC8
chain_count: 16
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: GRB

[neopixel led3] # Right
pin: PC5
chain_count: 16
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: GRB

#	Set RGB values on boot up for each Neopixel. 
[delayed_gcode setneopixel]
# Ran at startup to link LEDs with temps
initial_duration: 0.1
gcode:
  #LED_THERMOMETER
   Welcome

[gcode_macro Welcome]
gcode:
    SET_LED LED=led1 RED=0.0 BLUE=1.0 GREEN=0.0
    SET_LED LED=led2 RED=0.0 BLUE=1.0 GREEN=0.0
    SET_LED LED=led3 RED=0.0 BLUE=0.0 GREEN=1.0
    G4 P1000
    SET_LED LED=led1 RED=1.0 BLUE=0.0 GREEN=0.0
    SET_LED LED=led2 RED=1.0 BLUE=0.0 GREEN=0.0
    SET_LED LED=led3 RED=0.0 BLUE=0.0 GREEN=1.0
    G4 P1000
    SET_LED LED=led1 RED=0.0 BLUE=0.0 GREEN=1.0
    SET_LED LED=led2 RED=0.0 BLUE=0.0 GREEN=1.0
    SET_LED LED=led3 RED=0.0 BLUE=0.0 GREEN=1.0
    G4 P10

[gcode_macro LED_READY] # RGB
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=led1 RED=0.5 GREEN=0.0 BLUE=0.0
  SET_LED LED=led2 RED=0.0 GREEN=0.5 BLUE=0.0
  SET_LED LED=led3 RED=0.0 GREEN=0.0 BLUE=0.5

[gcode_macro LED_OFF] # Off
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=led1 RED=0.0 GREEN=0.0 BLUE=0.0
  SET_LED LED=led2 RED=0.0 GREEN=0.0 BLUE=0.0
  SET_LED LED=led3 RED=0.0 GREEN=0.0 BLUE=0.0

[gcode_macro LED_SUCCESS] # GGG
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=led1 RED=0.0 GREEN=0.1 BLUE=0.0
  SET_LED LED=led2 RED=0.0 GREEN=0.5 BLUE=0.0
  SET_LED LED=led3 RED=0.0 GREEN=0.5 BLUE=0.0
    
[gcode_macro LED_FAIL] # RRR
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=led1 RED=0.5 GREEN=0.0 BLUE=0.0
  SET_LED LED=led2 RED=0.5 GREEN=0.0 BLUE=0.0
  SET_LED LED=led3 RED=0.5 GREEN=0.0 BLUE=0.0
  
[gcode_macro LED_STARTING] # What is this for?
gcode:
  LED_THERMOMETER
    
[gcode_macro LED_PRINTING] # RRG
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=led1 RED=0.5 GREEN=0.0 BLUE=0.0
  SET_LED LED=led2 RED=0.5 GREEN=0.0 BLUE=0.0
  SET_LED LED=led3 RED=0.0 GREEN=0.5 BLUE=0.0
    
[gcode_macro LED_PAUSED] # GGG
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=led1 RED=0.0 GREEN=0.5 BLUE=0.0
  SET_LED LED=led2 RED=0.0 GREEN=0.5 BLUE=0.0
  SET_LED LED=led3 RED=0.0 GREEN=0.5 BLUE=0.0
  
[gcode_macro LED_NIGHT_LIGHT]
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=led1 RED=0.1 GREEN=0.0 BLUE=0.0
  SET_LED LED=led2 RED=0.0 GREEN=0.0 BLUE=0.0
  SET_LED LED=led3 RED=0.0 GREEN=0.0 BLUE=0.0

[gcode_macro CANCEL_THERMOMETER]
gcode:
  UPDATE_DELAYED_GCODE ID=LED_THERMOMETER_REFRESH DURATION=0
  
[gcode_macro LED_THERMOMETER]
gcode:
  SET_LED_TEMPERATURES
  UPDATE_DELAYED_GCODE ID=LED_THERMOMETER_REFRESH DURATION=2  

[delayed_gcode LED_THERMOMETER_REFRESH]
initial_duration: 10.0
gcode:
    SET_LED_TEMPERATURES
    UPDATE_DELAYED_GCODE ID=LED_THERMOMETER_REFRESH DURATION=2

[gcode_macro SET_LED_TEMPERATURES]
variable_extruder_red: 0.0
variable_extruder_green: 0.0
variable_extruder_blue: 0.0
variable_bed_red: 0.0
variable_bed_green: 0.0
variable_bed_blue: 0.0
variable_status_red: 0.0
variable_status_green: 0.0
variable_status_blue: 0.0

gcode:
    # Start by setting safe default values
    {% set extruder_red = 0.0 %}
    {% set extruder_green = 0.0 %}
    {% set extruder_blue = 0.0 %}
    {% set bed_red = 0.0 %}
    {% set bed_green = 0.0 %}
    {% set bed_blue = 0.0 %}
    {% set status_red = 0.0 %}
    {% set status_green = 0.0 %}
    {% set status_blue = 0.0 %}

    # Make status display red if any heater is above 50C, otherwise green
    {% if printer.extruder.temperature >= 50 or printer.heater_bed.temperature >= 50 %}
        {% set status_red = 1.0 %}
        {% set status_green = 0.0 %}
        {% set status_blue = 0.0 %}
    {% else %}
        {% set status_red = 0.0 %}
        {% set status_green = 0.5 %}
        {% set status_blue = 0.0 %}
    {% endif %}

    # Get extruder target temperature, assume 260 if off (avoids divide-by-zero)
    {% if printer.extruder.target > 0.0 %}
      {% set extruder_target = printer.extruder.target|float %}
    {% else %}
      {% set extruder_target = 260.0 %}
    {% endif %}

    # Get bed target temperature, assume 115 if off (avoids divide-by-zero)
    {% if printer.heater_bed.target > 0.0 %}
     {% set bed_target = printer.heater_bed.target|float %}
    {% else %}
      {% set bed_target = 115.0 %}
    {% endif %}

    # Get actual temperatures as measured by the thermistors
    {% set extruder_actual = printer.extruder.temperature|float %}
    {% set bed_actual = printer.heater_bed.temperature|float %}

    # Set extruder LED colour
    {% set extruder_red = extruder_actual / extruder_target %}
    {% set extruder_green = 0.0 %}  
    {% set extruder_blue =(extruder_target - extruder_actual) / extruder_target %} 
    # Sanity checking - enforce range 0.0 to 1.0 inclusive
    {% if extruder_red > 1.0 %} {% set extruder_red = 1.0 %} {% endif %}
    {% if extruder_green > 1.0 %} {% set extruder_green = 1.0 %} {% endif %}
    {% if extruder_blue > 1.0 %} {% set extruder_blue = 0.5 %} {% endif %}
    {% if extruder_red < 0.0 %} {% set extruder_red = 0.0 %} {% endif %}
    {% if extruder_green < 0.0 %} {% set extruder_green = 0.0 %} {% endif %}
    {% if extruder_blue < 0.0 %} {% set extruder_blue = 0.0 %} {% endif %}


    # Set bed LED colour
    {% set bed_red = bed_actual / bed_target %}  
    {% set bed_green = 0.0 %}  
    {% set bed_blue = (bed_target - bed_actual) / bed_target %}
    # Sanity checking - enforce range 0.0 to 1.0 inclusive
    {% if bed_red > 1.0 %} {% set bed_red = 1.0 %} {% endif %}
    {% if bed_green > 1.0 %} {% set bed_green = 1.0 %} {% endif %}
    {% if bed_blue > 1.0 %} {% set bed_blue = 0.5 %} {% endif %}
    {% if bed_red < 0.0 %} {% set bed_red = 0.0 %} {% endif %}
    {% if bed_green < 0.0 %} {% set bed_green = 0.0 %} {% endif %}
    {% if bed_blue < 0.0 %} {% set bed_blue = 0.0 %} {% endif %}
    
    # Write the computed colour values to the neopixel LEDs.
    SET_LED LED=led1 RED={extruder_red} GREEN={extruder_green} BLUE={extruder_blue} #INDEX=2 TRANSMIT=0
    SET_LED LED=led2 RED={bed_red} GREEN={bed_green} BLUE={bed_blue} #INDEX=1 TRANSMIT=1
    SET_LED LED=led3 RED={status_red} GREEN={status_green} BLUE={status_blue} #INDEX=3 TRANSMIT=0